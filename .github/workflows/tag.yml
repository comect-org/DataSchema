name: Release Tag

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3

        with:
          java-version: 17
          distribution: temurin

      - name: Set up Kotlin
        uses: fwilhe2/setup-kotlin@main

      - name: Set up Gradle properties
        run: |
          mkdir -p ~/.gradle
          echo "org.gradle.jvmargs=-XX:MaxMetaspaceSize=5G" >> ~/.gradle/gradle.properties
          echo -e "\nsigning.gnupg.keyName=0A4A09DB993DD003F018A4A64C64E3B297621F52" >> ~/.gradle/gradle.properties
          echo -e "\nsigning.gnupg.passphrase=${{ secrets.GPG_PASSWORD }}" >> ~/.gradle/gradle.properties

      - name: Set up git credentials
        uses: oleksiyrudenko/gha-git-credentials@v2

        with:
          global: true
          token: '${{ secrets.GITHUB_TOKEN }}'

      - name: Gradle (Build)
        uses: gradle/gradle-build-action@v2
        with:
          arguments: checkLicenses build createExe

      - name: Gradle (Publish)
        uses: gradle/gradle-build-action@v2

        env:
          ORG_GRADLE_PROJECT_signingKey: "${{ secrets.GPG_KEY }}"
          ORG_GRADLE_PROJECT_signingPassword: "${{ secrets.GPG_PASSWORD }}"

          ORG_GRADLE_PROJECT_sonatypeUsername: "${{ secrets.OSSRH_USERNAME }}"
          ORG_GRADLE_PROJECT_sonatypePassword: "${{ secrets.OSSRH_PASSWORD }}"

        with:
          arguments: publishToSonatype closeAndReleaseSonatypeStagingRepository

      - name: Create release description
        run: kotlin .github/tag.main.kts

      - name: Get tag name
        id: get_tag
        run: echo ::set-output name=NAME::${GITHUB_REF#refs/tags/}

      - name: Clean up JARs
        run: |
          mkdir releases
          
          mv cli/build/libs/cli-*-all.jar releases/DataSchema.jar
          mv cli/build/launch4j/*.exe releases/
          mv cli/scripts/* releases/

          mv library/build/libs/*.jar releases/

      - name: Create Release
        uses: softprops/action-gh-release@v1

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        with:
          body_path: release.md
          name: Release ${{ steps.get_tag.outputs.NAME }}

          files: "releases/*"

      - name: Release webhook
        run: kotlin .github/release.main.kts

        env:
          WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}

      - name: Upload artifact (Main JARs)
        uses: actions/upload-artifact@v3

        with:
          name: JARs
          path: "*/build/libs/*.jar"

      - name: Upload artifact (Windows wrapper)
        uses: actions/upload-artifact@v3

        with:
          name: Windows wrapper
          path: "cli/build/launch4j/DataSchema.exe"
